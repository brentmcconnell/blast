trigger:
- main

pool:
  vmImage: 'ubuntu-18.04'

variables:
  imageName: 'emcconne/blast'
  containerRegistry: 'blastregistry.azurecr.io'
  tag: '$(Build.BuildId)'

steps:
- task: AzureCLI@2
  displayName: 'runtime_vars'
  name: runtime_vars
  inputs:
    azureSubscription: 'BLAST'
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
      az --version
      az account show
      SA_ACCESS_KEY=$(az storage account keys list --account-name $(DATA_STORAGE_ACCOUNT) | jq -r ".[0].value")
      echo "##vso[task.setvariable variable=SA_TOKEN;isOutput=true]$SA_ACCESS_KEY"

- script: |
    wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
    sudo dpkg -i packages-microsoft-prod.deb
    sudo apt-get update
    sudo apt-get install blobfuse
    WHOAMI=$(whoami)
    sudo mkdir /mnt/ramdisk
    sudo mount -t tmpfs -o size=16g tmpfs /mnt/ramdisk
    sudo mkdir -p /mnt/ramdisk/blobfusetmp
    sudo chown $WHOAMI /mnt/ramdisk/blobfusetmp
    export AZURE_STORAGE_ACCOUNT=$(DATA_STORAGE_ACCOUNT)
    export AZURE_STORAGE_ACCESS_KEY="$(runtime_vars.SA_TOKEN)"
    mkdir biodata
    sudo -E blobfuse biodata --container-name=data --tmp-path=/mnt/ramdisk/blobfusetmp -o allow_other -o attr_timeout=240 -o entry_timeout=240 -o negative_timeout=120 --log-level=LOG_DEBUG
    sleep 10
    ls -la biodata
  displayName: 'Run a multi-line script'

- script: |
    BASE_ADDRESS=$(WEB_ADDRESS)
    scripts/parse_biodata.sh -w $BASE_ADDRESS -d $(pwd)/biodata/data -o content -y
    ls -la content
  displayName: 'Parse raw data results'

- script: |
    docker run --rm -v $(pwd):/src klakegg/hugo:latest
    ls -la docs
  displayName: 'Run Website Generator'

- task: Docker@2
  displayName: Build and push an image to container registry
  inputs:
    command: buildAndPush
    repository: $(imageName)
    dockerfile: '**/Dockerfile' 
    containerRegistry: $(containerRegistry)
    tags: $(tag)
